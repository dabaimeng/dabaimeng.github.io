<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>自制扫描隧道显微镜【一】</title>
    <link href="/2025/03/12/%E8%87%AA%E5%88%B6%E6%89%AB%E6%8F%8F%E9%9A%A7%E9%81%93%E6%98%BE%E5%BE%AE%E9%95%9C%E3%80%90%E4%B8%80%E3%80%91/"/>
    <url>/2025/03/12/%E8%87%AA%E5%88%B6%E6%89%AB%E6%8F%8F%E9%9A%A7%E9%81%93%E6%98%BE%E5%BE%AE%E9%95%9C%E3%80%90%E4%B8%80%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="自制一个扫描隧道显微镜【一】"><a href="#自制一个扫描隧道显微镜【一】" class="headerlink" title="自制一个扫描隧道显微镜【一】"></a>自制一个扫描隧道显微镜【一】</h1><p>在B站上看到的超牛UP，采用3D打印技术制作了一个扫描隧道显微镜，并测到了石墨的原子结构。项目已经开源了，看完后按耐不住躁动的心，准备复刻一个，目前完成度50%，由于条件限制，有些工作开展的比较费劲，希望能够完成吧。</p><p>UP@机械小熊猫 扫描得到的石墨原子结构（实际应该是电子云密度）：</p><p><img src="https://pic4.zhimg.com/v2-a79e025948b7cb45b228328ea98e489d_1440w.jpg" alt="石墨原子结构"></p><p>下面是我目前的进度。</p><p>主要解决三大块内容：要完成纳米级精度扫描要求的扫描台、处理pA级电流的前置放大电路与控制电路、固件程序与软件开发。</p><h2 id="3D打印的主体和减震平台"><a href="#3D打印的主体和减震平台" class="headerlink" title="3D打印的主体和减震平台"></a>3D打印的主体和减震平台</h2><p><img src="https://pic4.zhimg.com/v2-f123343a9d69088a7410116e1473f1a7_1440w.jpg" alt="整体模型"></p><p><img src="https://picx.zhimg.com/v2-f98d74e6317db3ddd64cd7b1287a217f_1440w.jpg" alt="3D打印零件"></p><p><img src="https://pic3.zhimg.com/v2-8787df67414e4ffb8c1957d2db28b580_1440w.jpg" alt="组装零件、安装紧固件、贴铝胶带、固定电机"></p><p><img src="https://picx.zhimg.com/v2-c8073282d7b76febe85058a8c981a5eb_1440w.jpg" alt="扫描台主体"></p><p><img src="https://pic4.zhimg.com/v2-0f366ff2f803b7910abcfca7fc6062bb_1440w.jpg" alt="减震平台"></p><p>斥巨资买了四个索雷博的精细调节螺丝，与步进电机结合可以达到微米级精度的控制。</p><p><img src="https://pic4.zhimg.com/v2-e42a76df64ff68fdc2ae050592b34281_1440w.jpg" alt="精细调节螺丝"></p><p>买的FAS100 搭配四个铜套：</p><p><img src="https://picx.zhimg.com/v2-639d074e9a72af4b6d0b0544e6083b85_1440w.jpg" alt="FAS100"></p><p><img src="https://pic2.zhimg.com/v2-b7b45a6b2c92a0488b72fb4383a2193d_1440w.jpg" alt="铜套"></p><h2 id="手工焊接扫描头"><a href="#手工焊接扫描头" class="headerlink" title="手工焊接扫描头"></a>手工焊接扫描头</h2><p>采用压电陶瓷片提供纳米级精度的控制：</p><p><img src="https://pica.zhimg.com/v2-5eb476adb842b24abbb2b29901a89a4c_1440w.jpg" alt="压电陶瓷片"></p><p>压电陶瓷拆分成四部分，可以进行面扫描：</p><p><img src="https://pic1.zhimg.com/v2-4e1201f6f0ad129892daaa56a7c51dec_1440w.jpg" alt="压电陶瓷拆分"></p><p>扫描头由拆开的DIP引脚焊接而成。</p><h2 id="定做前置放大器和控制电路"><a href="#定做前置放大器和控制电路" class="headerlink" title="定做前置放大器和控制电路"></a>定做前置放大器和控制电路</h2><p>（开源文件里没有物料表，所以我将PCB中的所有元器件进行了重新标记，参考了另一位大神的开源资料扫描隧道显微镜OpenSTM - 立创开源硬件平台。前置放大器参考了Dan Berard提供的开源板，详情参考<a href="https://dberard.com/home-built-stm/">Dan Berard的网站</a>。）</p><p><img src="https://pic3.zhimg.com/v2-44d8b927193d3608bd653256405f99bc_1440w.jpg" alt="控制电路DAC部分"></p><p><img src="https://picx.zhimg.com/v2-50697aca3648f848fed9c9c0e379bbc7_1440w.jpg" alt="控制电路PCB"></p><p><img src="https://pica.zhimg.com/v2-ceb3939056d31caa6f167cd15a17dc74_1440w.jpg" alt="前置放大器"></p><p>小的是前置放大器、大的是控制电路：</p><p><img src="https://pic1.zhimg.com/v2-d673903e2439c10bc20adef23ab1168e_1440w.jpg" alt="前置放大器和控制电路"></p><h2 id="固件与软件"><a href="#固件与软件" class="headerlink" title="固件与软件"></a>固件与软件</h2><p>（这部分全部用的开源代码，看了很久，大概了解怎么跑起来的了。）</p><p><img src="https://pic4.zhimg.com/v2-90c9079ce6b36c903132ae928b4c416d_1440w.jpg" alt="teensy4.1单片机搭配Adurino IDE"></p><p><img src="https://pic3.zhimg.com/v2-a544a96b29abc8402d486663af34774a_1440w.jpg" alt="控制界面采用python+tkinter"></p><p>接下来要连接各部分的线路，有后续再更新。</p>]]></content>
    
    
    
    <tags>
      
      <tag>单片机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】本地部署DeepSeek指南</title>
    <link href="/2025/02/12/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek%E6%8C%87%E5%8D%97/"/>
    <url>/2025/02/12/%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2DeepSeek%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="本地部署DeepSeek指南"><a href="#本地部署DeepSeek指南" class="headerlink" title="本地部署DeepSeek指南"></a>本地部署DeepSeek指南</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>DeepSeek是一款强大的自然语言处理工具，广泛应用于信息检索、文本分析等领域。本文将详细介绍如何在本地环境中部署DeepSeek，以便开发者能够更高效地利用这一工具。</p><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>在开始部署之前，请确保系统满足以下环境要求：</p><ul><li>操作系统：Linux或Windows</li><li>CPU：至少4核</li><li>内存：至少8GB</li><li>硬盘：至少100GB可用空间</li><li>Python：3.6及以上版本</li><li>其他依赖：Git、CMake、GCC</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><h3 id="1-克隆DeepSeek仓库"><a href="#1-克隆DeepSeek仓库" class="headerlink" title="1. 克隆DeepSeek仓库"></a>1. 克隆DeepSeek仓库</h3><p>首先，需要从GitHub上克隆DeepSeek的源代码仓库。打开终端或命令提示符，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/deepseek/deepseek.git<br><span class="hljs-built_in">cd</span> deepseek<br></code></pre></td></tr></table></figure><h3 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2. 安装依赖"></a>2. 安装依赖</h3><p>DeepSeek依赖于多个Python库和系统工具。可以使用以下命令安装所需的Python库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt<br></code></pre></td></tr></table></figure><p>对于系统工具，请根据操作系统进行安装。例如，在Ubuntu上可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/deepseek/deepseek.git<br><span class="hljs-built_in">cd</span> deepseek<br></code></pre></td></tr></table></figure><h3 id="3-编译源代码"><a href="#3-编译源代码" class="headerlink" title="3. 编译源代码"></a>3. 编译源代码</h3><p>DeepSeek的部分组件需要编译。进入src目录，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> build<br><span class="hljs-built_in">cd</span> build<br>cmake ..<br>make<br></code></pre></td></tr></table></figure><p>编译过程可能需要一些时间，请耐心等待。</p><h3 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4. 配置环境变量"></a>4. 配置环境变量</h3><p>为了方便使用DeepSeek，建议将其添加到环境变量中。编辑<del>&#x2F;.bashrc或</del>&#x2F;.zshrc文件，添加以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> DEEPSEEK_PATH=/path/to/deepseek<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$DEEPSEEK_PATH</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>保存并关闭文件，然后执行source ~&#x2F;.bashrc或source ~&#x2F;.zshrc使更改生效。</p><h3 id="5-初始化数据库"><a href="#5-初始化数据库" class="headerlink" title="5. 初始化数据库"></a>5. 初始化数据库</h3><p>DeepSeek使用数据库存储索引和数据。需要初始化数据库。执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deepseek_init_db<br></code></pre></td></tr></table></figure><h3 id="6-导入数据"><a href="#6-导入数据" class="headerlink" title="6. 导入数据"></a>6. 导入数据</h3><p>如果已有数据需要导入DeepSeek，可以使用deepseek_import命令。例如，导入一个CSV文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deepseek_import data.csv<br></code></pre></td></tr></table></figure><h3 id="7-启动DeepSeek服务"><a href="#7-启动DeepSeek服务" class="headerlink" title="7. 启动DeepSeek服务"></a>7. 启动DeepSeek服务</h3><p>一切准备就绪后，可以启动DeepSeek服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deepseek_start<br></code></pre></td></tr></table></figure><p>服务启动后，DeepSeek将开始监听指定端口，等待客户端请求。</p><h2 id="测试DeepSeek"><a href="#测试DeepSeek" class="headerlink" title="测试DeepSeek"></a>测试DeepSeek</h2><p>为了确保DeepSeek正确部署，可以进行简单的测试。使用以下命令发送查询请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deepseek_query <span class="hljs-string">&quot;您的查询内容&quot;</span><br></code></pre></td></tr></table></figure><p>如果一切正常，将看到与查询内容相关的结果。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Deepseek</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello！ Welcome to DABAI MENG&#39;s blog</title>
    <link href="/2025/02/08/hello-world/"/>
    <url>/2025/02/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到大白锰的博客，在这里我将记录一些随笔和技术文章，请随意浏览。</p><p>这个网站采用Hexo框架搭建，并托管在GitHub平台上。</p><p>欢迎使用<a href="https://hexo.io/">Hexo</a>！查看文档以获取更多信息。在使用Hexo时遇到任何问题，你可以在<a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a>中找到答案，或者你可以在<a href="https://github.com/hexojs/hexo/issues">GitHub</a>上提问。</p><p>Welcome to the blog of Dabaimeng, where I will record some essays and technical articles. Feel free to browse.</p><p>This website is built with the Hexo framework and hosted on GitHub.</p><p>Welcome to use <a href="https://hexo.io/">Hexo</a>! Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask with <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
